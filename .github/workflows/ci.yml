name: ci
on:
  push:
    branches:
      - main
  pull_request:
env:
  # Path to where test results will be saved.
  TEST_RESULTS: /tmp/test-results
  # Default minimum version of Go to support.
  DEFAULT_GO_VERSION: "~1.21.5"
jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}
        check-latest: true
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Module cache
      uses: actions/cache@v4
      env:
        cache-name: go-mod-cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
    - name: Tools cache
      uses: actions/cache@v4
      env:
        cache-name: go-tools-cache
      with:
        path: ~/.tools
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('./internal/tools/**') }}
    - name: Run linters
      run: make multimod-verify dependabot-check license-check lint
    - name: Build
      run: make build
    - name: Check clean repository
      run: make check-clean-work-tree

  test-race:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}
        check-latest: true
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Setup Environment
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
    - name: Module cache
      uses: actions/cache@v4
      env:
        cache-name: go-mod-cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
    - name: Run tests with race detector
      run: make test-race

  test-coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}
        check-latest: true
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Setup Environment
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
    - name: Module cache
      uses: actions/cache@v4
      env:
        cache-name: go-mod-cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
    - name: Run coverage tests
      run: |
        make test-coverage
        mkdir $TEST_RESULTS
        cp coverage.out $TEST_RESULTS
        cp coverage.txt $TEST_RESULTS
        cp coverage.html $TEST_RESULTS
    - name: Upload coverage report
      uses: codecov/codecov-action@v4.2.0
      with:
        file: ./coverage.txt
        fail_ci_if_error: true
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Store coverage test output
      uses: actions/upload-artifact@v4
      with:
          name: opentelemetry-go-test-output
          path: ${{ env.TEST_RESULTS }}
